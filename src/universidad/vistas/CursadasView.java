/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package universidad.vistas;
import java.awt.Color;
import java.time.LocalDate;
import java.time.Month;
import java.util.*;
import universidad.data.*;
import universidad.entidades.*;

/**
 *
 * @author Eourist
 */
public class CursadasView extends javax.swing.JInternalFrame {
    CursadaData cd;
    MateriaData md;
    AlumnoData ad;
    /**
     * Creates new form CursadasView
     */
    public CursadasView() {
        initComponents();
        cd = new CursadaData();
        ad = new AlumnoData();
        md = new MateriaData();
        
        armarDesplegableMaterias();
        armarDesplegableAlumnos();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jCBAlumnos = new javax.swing.JComboBox<>();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jCBMaterias = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        jBGuardar = new javax.swing.JButton();
        jCBNotas = new javax.swing.JComboBox<>();
        jLMensaje = new javax.swing.JLabel();
        jBBorrar = new javax.swing.JButton();

        setClosable(true);
        setTitle("Administracion de cursadas");

        jLabel1.setText("Alumno:");

        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Complete los datos para eliminar, actualizar la nota o registrar una nueva cursada");

        jLabel3.setText("Materia:");

        jLabel4.setText("Nota:");

        jBGuardar.setText("Guardar");
        jBGuardar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBGuardarActionPerformed(evt);
            }
        });

        jCBNotas.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Sin nota", "1", "2", "3", "4", "5", "6", "7", "8", "9", "10" }));

        jLMensaje.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLMensaje.setVerticalAlignment(javax.swing.SwingConstants.TOP);
        jLMensaje.setHorizontalTextPosition(javax.swing.SwingConstants.CENTER);

        jBBorrar.setText("Borrar");
        jBBorrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jBBorrarActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3)
                    .addComponent(jLabel4)
                    .addComponent(jLabel1))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jCBNotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jBGuardar)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jBBorrar))
                    .addComponent(jCBAlumnos, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jCBMaterias, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jLMensaje, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel2)
                .addGap(17, 17, 17)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel1)
                    .addComponent(jCBAlumnos, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBMaterias, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jCBNotas, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(jBGuardar)
                    .addComponent(jBBorrar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLMensaje, javax.swing.GroupLayout.PREFERRED_SIZE, 15, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(19, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jBGuardarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBGuardarActionPerformed
        int idMateria = ((Materia)jCBMaterias.getSelectedItem()).getId();
        int idAlumno = ((Alumno)jCBAlumnos.getSelectedItem()).getId();
        
        int nota = 0;
        try{
            nota = Integer.parseInt(jCBNotas.getSelectedItem().toString());
        } catch (NumberFormatException e){
            nota = 0;
        }
        
        Materia materia = md.obtenerMateria(idMateria);
        Alumno alumno = ad.obtenerAlumno(idAlumno);
        
        Cursada cursadaExistente = cd.obtenerCursada(idAlumno, idMateria);
        if (cursadaExistente.getId() != -1){
            if (nota == cursadaExistente.getNota())
                jLMensaje.setText("Error, la cursada ya existe");
            else {
                cd.actualizarCursada(idAlumno, idMateria, nota);
                jLMensaje.setText("¡Se actualizó la nota de la cursada!");
            }
        } else {
            Cursada nuevaCursada = new Cursada(alumno, materia, nota);
            if (materia != null && alumno != null){
                nuevaCursada = cd.altaCursada(nuevaCursada);
            }

            if (nuevaCursada.getId() != -1){
                jLMensaje.setText("¡Cursada guardada!");
            } else {
                jLMensaje.setText("Error, datos ingresados invalidos");
            }
        }
    }//GEN-LAST:event_jBGuardarActionPerformed

    private void jBBorrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jBBorrarActionPerformed
        int idMateria = ((Materia)jCBMaterias.getSelectedItem()).getId();
        int idAlumno = ((Alumno)jCBAlumnos.getSelectedItem()).getId();
        
        if (idMateria == -1 || idAlumno == -1){
            jLMensaje.setText("Error, datos ingresados invalidos");
        } else {
            Cursada cursadaExistente = cd.obtenerCursada(idAlumno, idMateria);
            if (cursadaExistente.getId() != -1){
                cd.bajaCursada(idAlumno, idMateria);
                jLMensaje.setText("¡Cursada eliminada!");
            } else {
                jLMensaje.setText("Error, la cursada no existe");
            }
        }
    }//GEN-LAST:event_jBBorrarActionPerformed
    
    private void armarDesplegableMaterias(){
        ArrayList<Materia> resultados = new ArrayList<>();
        resultados = md.obtenerMaterias();
        
        jCBMaterias.addItem(new Materia("Materia"));
        for (Materia m : resultados){
            jCBMaterias.addItem(m);
        }
    }
    private void armarDesplegableAlumnos(){
        ArrayList<Alumno> resultados = new ArrayList<>();
        resultados = ad.obtenerAlumnos();
        
        jCBAlumnos.addItem(new Alumno("Alumno", LocalDate.of(1980, Month.MARCH, 1), false));
        for (Alumno a : resultados){
            jCBAlumnos.addItem(a);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jBBorrar;
    private javax.swing.JButton jBGuardar;
    private javax.swing.JComboBox<Alumno> jCBAlumnos;
    private javax.swing.JComboBox<Materia> jCBMaterias;
    private javax.swing.JComboBox<String> jCBNotas;
    private javax.swing.JLabel jLMensaje;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    // End of variables declaration//GEN-END:variables
}
